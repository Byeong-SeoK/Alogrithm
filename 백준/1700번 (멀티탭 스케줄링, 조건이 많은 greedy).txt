from collections import deque
import sys
input = sys.stdin.readline


N, K = map(int, input().split())
device = deque(list(map(int, input().split())))

multitab = [0]*N
pull_out = 0

while device:
    name = device[0]

    if(name in multitab):
        #멀티탭에 해당 장치가 이미 꽂혀있는 경우
        #계속 사용하면 되므로 건너뛴다.
        device.popleft()
        continue

    elif(0 in multitab):
        #멀티탭에 빈 곳이 있는 경우
        #해당 구멍에 꽂도록 한다.
        multitab[multitab.index(0)] = name
        device.popleft()

    else:
        #멀티탭에 자리가 없는 경우
        #다만 이때는 두가지 경우가 있는데
        #첫번째 경우는 꽂혀있는 장치 둘다거나 어떤 것이 device 배열에 더 이상 없는 경우
        #두번째 경우는 꽂혀있는 장치 둘다 device 배열에 향후 또 있는 경우
        #첫번째 경우에는 없는 것에 대해서 뽑으면 되지만 두번째 경우에는 가장 나중에 사용되는 장치를 뽑아야한다.

        change = 0 #멀티탭에서 빠져야할 대상이 되는 장치를 받는 변수
        far = 0 #두번째 경우에 대해 가장 멀리 있는 장치의 index를 받는 변수

        for mt in multitab:
            #멀티탭에 꽂혀있는 장치들을 일일히 접근하여 해당 장치가
            #device 배열에 존재하는지를 통해 이후에도 사용되는지를 검사한다.

            if(mt not in device):
                #device 배열에 없다는 것은 더 이상 사용되지 않는다는 의미이므로 뽑는다.
                change = mt
                break

            elif(device.index(mt) > far):
                #device내에 현재 멀티탭에 꽂혀있는 장치가 존재할 때
                #해당 장치가 device내에서 얼마나 나중에 사용되는지를 받는다.
                #이 조건문 분기를 통해서 멀티탭에 꽂혀있는 장치 모두가 device 배열 내에 존재하여
                #향후 사용될 가능성이 있는 경우에 가장 나중에 사용될 장치를 빼는 것을 할 수 있도록 해준다.

                far = device.index(mt)
                #반복문을 돌다가 위 조건을 만족하는 것을 찾았을 떄 그 값의 device배열의 index값이
                #현재로써는 가장 나중에 사용하는 장치의 index이므로 그 index값을 far에 넣는다.
                #이렇게 index값을 넣는 이유는 나중에 device 배열에서 해당 장치를 뺄 떄 필요하기 때문이다.
                change = mt

        multitab[multitab.index(change)] = name
        device.remove(name)

        pull_out = pull_out+1

print(pull_out)