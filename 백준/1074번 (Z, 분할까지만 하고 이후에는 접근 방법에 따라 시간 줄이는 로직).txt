import sys
def divide(x, y, size):
    global count
    if(x+size <= r or y+size <= c):
        #해당 블록 내에 찾으려는 (r,c)가 없는 경우
        #먼저 x~x+size, y~y+size안에 r,c가 없으면 절대 찾을 수 가 없다.
        #또 이때 x+size == r 혹은 y+size == c 인 경우도 해당 블럭 내에서 r,c를 찾을 수 없다.
        #ex) x=0, size=2, r=2인 경우 2 == 2 이지만, 해당 블럭은 [(0,0), (0,1), (1,0), (1,1)] 이므로
        #r=2인 지점이 해당 블럭내에 존재하지 않는다. 그러므로 찾을 수 없다.
        #그러므로 따로 탐색하지 않고 블럭의 크기인 size**2를 count에 추가한다.

        count = count + size**2
        return

    if(size > 2): #2x2 크기가 최소 단위이므로 2x2가 될 때까지 크기를 줄인다.
        size = size // 2
        divide(x, y, size)
        divide(x, y+size, size)
        divide(x+size, y, size)
        divide(x+size, y+size, size)
    else:
        if(r == x and c == y):
            print(count)
        elif(r == x and c == y+1):
            print(count+1)
        elif(r == x+1 and c == y):
            print(count+2)
        else:
            print(count+3)

        sys.exit() #프로그램 자체를 종료시킨다.


N, r, c = map(int, input().split())
#N은 배열의 크기를 받는 변수, r은 행 값, c는 열 값에 해당한다.

size = 2**N
count = 0 #몇번째에 (r,c)에 접근하는지 받는 변수

divide(0, 0, size)