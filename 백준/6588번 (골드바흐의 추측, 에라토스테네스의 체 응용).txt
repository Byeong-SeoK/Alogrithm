import sys

dp = [1] * (1000000 + 1) #소수를 담는 배열이다. 일단 모두 소수임을 의미하는 1로 초기화한다.
dp[0] = 0 #소수가 아닌 부분은 0으로 초기화한다.
dp[1] = 0

for i in range(2, 1001):  #dp에 소수를 넣는 과정 (에라토스테네스의 체)
    if dp[i]: #i번째가 소수이면 그 i의 배수들은 전부다 소수가 아니다.
        for j in range(i + i, 1000001, i):
            #그렇기 때문에 i*2부터 시작해 끝까지 i의 배수들을 전부다 0으로 한다.
            dp[j] = 0

def goldbach(n):
    for i in range(2, n): #1은 소수가 아니므로 2번째부터 확인한다.
        if dp[i] and dp[n - i]:
            #덧셈으로 표현하는 것이므로 i와 n-i번째의 dp값이 소수인지 확인한다.
            print(f'{n} = {i} + {n - i}')
            return 0 #만약 소수를 찾으면 이를 출력하고 반환한다.
    return 1 #소수를 못 찾으면 골드바흐 가설이 증명된 것이다.

while (1):
    try:
        n = int(sys.stdin.readline())
        if n == 0:
            break
        if goldbach(n):
            print("Goldbach's conjecture is wrong.")
    except EOFError:
        break