import sys
from collections import deque

m, n, h = map(int, input().split())  # mn크기, h상자수, mn에 들어있는 정보대로 h만큼 쌓인다.
graph = []
queue = deque([])

for i in range(h):
    #상자에 담고 이 상자들을 쌓아올릴 때를 생각해보자
    #먼저 가로세로의 2차원 상자에 다 담고 이를 쌓아올리는 형태이므로
    #for문 가장 밖이 높이에 해당하고 가장 안쪽 2개의 for문이 세로 가로 형태가 된다.
    tmp = []
    for j in range(n):
        tmp.append(list(map(int, sys.stdin.readline().split())))
        for k in range(m):
            if tmp[j][k] == 1:
                queue.append([i, j, k])
    graph.append(tmp)

dx = [-1, 1, 0, 0, 0, 0]
dy = [0, 0, 1, -1, 0, 0]
dz = [0, 0, 0, 0, 1, -1]
#3차원이므로 동서남북에 위아래까지 추가해야한다.
while (queue):
    x, y, z = queue.popleft()

    for i in range(6):
        a = x + dx[i]
        b = y + dy[i]
        c = z + dz[i]
        if 0 <= a < h and 0 <= b < n and 0 <= c < m and graph[a][b][c] == 0:
            queue.append([a, b, c])
            graph[a][b][c] = graph[x][y][z] + 1

day = 0
for i in graph:
    for j in i:
        for k in j:
            if k == 0:
                print(-1)
                exit(0)
        day = max(day, max(j))
print(day - 1)