import sys
N = int(sys.stdin.readline())

"""
길이가 1일때 부터 N일 때까지 일일히 나열해보면
각 길이에 따라 만들수 있는 비트 수가 피보나치 수열을
이루고 있음을 알 수 있다. 그러므로 메모이제이션을 활용한다.
다만 끝 값이 너무 큰 수라 배열이 아닌 변수를 사용하여
메모이제이션을 적용하도록 한다.
"""

count = [0] * 1000000
count[0] = 1
count[1] = 2
#1일 때는 항상 1가지 경우이고 2일 때는 항상 2가지 경우이다.
#시간제한이 매우 짧기 때문에 배열을 사용해야한다.
#일반 변수를 사용하면 사용되는 메모리 자체는 배열보다 작을지언정
#매 반복마다 변수를 메모리에 재할당하고 변수에 값을 할당하는 시간이
#메모리에 딱 한번만 할당하면 그 뒤로 따로 할당할 필요가 없는 배열보다
#오래 걸려서 시간 초과가 발생한다.

for i in range(2, N):
    count[i] = count[i-2] + count[i-1]
    
    count[i] = count[i] % 15746
    #범위에 해당하는 숫자가 워낙에 큰 수들도 있어서 연산을 하는 도중에
    #계속해서 15746으로 나누어주지 않고 for문을 나가서 15746으로 나누어
    #최종 값을 출력하려하면 엄청난 메모리 소비가 발생한다.
    
print(count[N-1])