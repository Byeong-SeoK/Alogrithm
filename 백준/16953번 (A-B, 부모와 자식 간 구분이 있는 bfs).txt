from collections import deque
import sys
input = sys.stdin.readline

def bfs(end, operate):
    find = False #최종값에 도달한 여부를 받는 변수

    while operate:
        node = operate.popleft()

        value = node[0]
        step = node[1]

        if(value == end):
            find = True #찾았으므로 True로 바꾼다.
            print(step)
            return

        elif(value > end):
            #만약 현재 접근한 값이 최종값보다 더 큰 경우
            #더 이상 최종값에 도달할 수 없으므로 넘겨버린다.
            #다만, 중간에 1을 붙이는 연산에 의해 더 큰 값이 나오는 경우도
            #있으므로 return이나 break가 아닌 continue로 처리한다.
            #대신 queue에 새로이 추가되지 않으므로 이보다 더 큰 값은 접근하지 않게 된다.
            continue

        else:
            operate.append([value*2, step+1])
            operate.append([value*10+1, step+1])

    if(not find): #최종적으로 연산할 수 없는 값에 대해서 -1을 출력하도록 한다.
        print(-1)


A, B = map(int, input().split()) #A가 시작점, B가 끝점

operate = deque([[A, 1]]) #연산 순서를 담는 배열
bfs(B, operate)