import sys
input = sys.stdin.readline

sen1 = " " + input().rstrip()
sen2 = " " + input().rstrip()
sen3 = " " + input().rstrip()

dp = [[[0 for _ in range(0, len(sen3))] for _ in range(0, len(sen2))] for _ in range(0, len(sen1))]
#LCS를 찾아야하는 문장이 총 3개이므로 dp배열도 3차원 배열이 되어야 한다.

for i in range(1, len(sen1)):
    for j in range(1, len(sen2)):
        for k in range(1, len(sen3)):
            if(sen3[k] == sen2[j] and sen2[j] == sen1[i]):
                #만약 3개의 문장 모두 단어가 같은 경우 3차원 배열이므로
                #모든 index값에 -1을 한 지점의 값에 +1을 한다.
                dp[i][j][k] = dp[i-1][j-1][k-1]+1
            else:
                #만약 하나라도 단어가 다른 경우 인접한 값을 비교하여 최대값을 넣어야하는데
                #이때 dp가 3차원 배열이므로 각 index에 -1을 한 것들끼리 비교하여 최대값을 넣는다.
                dp[i][j][k] = max(dp[i-1][j][k], dp[i][j-1][k], dp[i][j][k-1])


print(dp[-1][-1][-1])