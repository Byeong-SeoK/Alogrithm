import sys
n, m, inven = map(int, sys.stdin.readline().split())
#n은 땅의 세로, m은 땅의 가로, inven은 인벤토리에 들어있는 블록의 개수이다.

ground = [] #땅의 높이를 받은 1차원 배열
for i in range(0, n):
    temp = list(map(int, sys.stdin.readline().split()))
    ground = ground + temp

height = 0
time = 10000000000000

height_type = {}
#높이가 같은 블록은 이후 한번에 블록을 지우거나 채우기 위해
#높이가 같은 것끼리 묶어준다. 그래서 위 사전의 key는 땅의 높이가 되고
#각 key의 value는 높이가 같은 것들의 개수가 된다.
for j in ground:
    if(j in height_type):
        height_type[j] = height_type[j]+1
    else:
        height_type[j] = 1

min_height = min(ground) #땅에서 가장 낮은 높이
max_height = max(ground) #땅에서 가장 높은 높이
#가장 낮은 높이와 가장 높은 높이를 구하는 이유는 땅을 고르게 하는 범위가
#어찌됐든 가장 낮은 높이로 고르게 하는 것 부터 가장 높은 높이로 고르게 하는 것
#이 범위 내에서 하기 때문이다. 가장 낮은 높이가 예를 들어 23인데 뜬금없이
#0으로 하는 불필요한 고르는 작업은 하지 않는다.

for cur_height in range(min_height, max_height+1):
    #땅을 고르게 하는 범위는 위에서 설명한 범위이므로 for문을
    #해당 범위 내에서 반복 시켜서 어떤 높이로 땅을 고르게 할 때
    #가장 시간이 적게 걸리는 지를 구해야 한다.
    #cur_height는 땅을 고르게 만들기 위해 현재 지정한 높이이다.

    cur_time = 0
    #(min_height+cur_height)번째 높이로 땅을 고르게 할 때 걸리는 시간을 받는 변수이다.

    for real_height in ground:
        if(real_height > cur_height):
            #현재의 땅의 높이가 고르게 하려는 땅의 높이보다 높은 경우로
            #현재의 땅에서 블록을 빼는 것으로 cur_height 값에 맞추면 된다.

            cur_time = cur_time + (real_height - cur_height) * height_type[real_height] * 2
            #블록을 빼는데 걸리는 시간은 2초이므로 2를 곱해주고 height_type[real_height]를 곱해주므로
            #real_height 높이에 해당하는 땅 블록 모두를 한번에 블록을 빼주게 한다.
            #그리하여 한번에 해당 높이를 cur_height로 만들어준다.
            #그래서 걸리는 시간은 해당 블록 개수만큼 곱해주어야 한다.

        else:
            #현재의 땅의 높이가 고르게 하려는 땅의 높이보다 낮은 경우로
            #현재의 땅에서 블록을 추가하는 것으로 cur_height 값에 맞추면 된다.

            cur_time = cur_time + (cur_height-real_height) * height_type[real_height]
            #블록을 빼는데 걸리는 시간은 1초이므로 따로 숫자를 곱해주지는 않는다.
            #그리고 여기서도 마찬가지로 height_type[real_height]를 곱해주는 것으로
            #real_height 높이에 해당하는 땅 블록 모두를 한번에 블록을 추가하게 한다.
            #그리하여 한번에 해당 높이를 cur_height로 만들어 준다.
            #그래서 걸리는 시간은 해당 블록 개수만큼 곱해주어야 한다.

    if(cur_time < time):
        time = cur_time
        height = cur_height

print(time, height)
