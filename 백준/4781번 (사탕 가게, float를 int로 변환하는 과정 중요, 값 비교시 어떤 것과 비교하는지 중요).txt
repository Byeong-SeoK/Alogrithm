import sys
input = sys.stdin.readline

while True:
    N, M = map(float, input().split())
    #N은 사탕의 종류 M은 가지고 있는 돈이다.

    if(N == 0 and M == 0.00):
        break

    candy = [[0, 0.00]]
    for _ in range(0, int(N)):
        a, b = map(float, input().split())
        candy.append([int(a), int(b*100+0.5)])

    #print(candy)

    dp = [0]*(int(M*100+0.5)+1)
    #dp는 0부터 M까지의 금액의 길이만큼의 1차원 배열이다.
    #이 배열의 값으로는 각 금액의 시점에 대한 칼로리가 들어간다.
    #float를 정수로 변환할 때는 반드시 소수점 자리수에 해당하는
    #10의 제곱수를 곱하고 여기에 0.5를 더해야 한다.

    for i in range(1, int(N)+1):
        calorie = candy[i][0]
        cost = candy[i][1]

        for j in range(1, len(dp)):
            if(j >= cost):
                dp[j] = max(dp[j], dp[j-cost]+calorie)
                #현재 값과 새로이 계산한 값과 비교하여 더 큰 것을 넣는다.
            else:
                dp[j] = max(dp[j], dp[j-1])
                #이전의 값과 비교하여 더 큰 값을 넣도록 한다.
                #이는 cost가 300일 때 재정의한 dp배열이
                #이후에 들어온 cost가 500일 때의 상황에 의해
                #dp[j]가 0으로 다시 초기화 되는 것을 막아준다.


    print(dp[-1])