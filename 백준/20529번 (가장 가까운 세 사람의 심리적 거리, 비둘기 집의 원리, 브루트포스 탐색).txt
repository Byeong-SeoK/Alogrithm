import sys
input = sys.stdin.readline

TC = int(input())
while TC:
    people = int(input())
    MBTI = list(input().split())
    difference = 999999999
    #항상 더 작은 값을 찾아야하므로 비교 연산을 위해서 임의의 큰 값을 지정

    if(people > 32):
        #비둘기 집의 원리를 이용한 분기문이다.
        #MBTI의 총 가능한 경우의 수는 2^4이므로 총 16개이다.
        #근데 문제에서 가장 MBTI 거리가 작은 경우를 찾아야한다고 했으므로
        #만약 MBTI 결과 개수가 32개가 넘으면 무조건 어떤 MBTI 경우든 하나는 3개인 경우가 존재한다.
        #그러므로 이 경우 항상 가장 작은 값은 0이 되므로 0을 출력하면 된다.
        print(0)
    else:
        for i in range(0, people): #첫번째 사람에게 접근
            for j in range(0, people): #두번째 경우에 대해 접근
                for k in range(0, people): #세번째 경우에 대해 접근
                    temp = 0 #가장 작은 경우를 찾기 위한 변수
                    if(i == j or j == k or i == k):
                        #i,j,k중 한 경우라도 동일한 사람인 경우 탐색할 필요가 없다.
                        #그러면 A, A, B 이렇게 세 사람을 탐색하는 것과 마찬가지이기 때문이다.
                        continue

                    for x in range(0, 4): #서로 다른 MBTI사람에 대해서는 각각 문자 하나씩 비교한다.
                        if(MBTI[i][x] != MBTI[j][x]):
                            temp = temp+1
                        if(MBTI[j][x] != MBTI[k][x]):
                            temp = temp+1
                        if(MBTI[k][x] != MBTI[i][x]):
                            temp = temp+1

                    difference = min(difference, temp)

        print(difference)

    TC = TC - 1