import sys
input = sys.stdin.readline

N = int(input())

flower = []
for _ in range(0, N):
    s_month, s_date, e_month, e_date = map(int, input().split())
    flower.append([s_month*100+s_date, e_month*100+e_date])
    #이렇게 달에 100을 곱하고 일을 더하는 이유는
    #9/3을 903으로 표현하기 쉬운 이유도 있지만,
    #6/15와 9/3을 비교할 때 6 < 9 이지만 15 > 3 이어 비교하기 너무 어려워진다.
    #그렇기 때문에 아예 615 < 903으로 편하게 비교하도록 한다.

flower.sort(key=lambda x : (x[0], x[1]))
#꽃이 피는 월+일과 꽃이 지는 월+일을 기준으로 배열을 정렬한다.
#print(flower)

target = 301 #현재 지정된 꽃이 지는 월+일을 받는 변수
#해당 변수를 301로 지정한 이유는 꽃이 정원에 반드시 피어있어야 할 기간이
#3/1~11/30이므로 최솟값인 301을 넣어두는 것이다.

end = 0 #flower배열에서 가장 첫번째 꽃이 지는 시기
total = 0 #정원에 피는 꽃의 최소 개수

while(flower):
    if(target < flower[0][0] or target >= 1201):
        #현재 꽃이 피는 시기가 flower배열에서 가장 먼저 피는 꽃보다 더 일찍 피거나
        #꽃이 피는 시기가 12/1 이후이면 탐색을 끝낸다. 이때 12/1도 포함되어야 한다.
        #만약 꽃이 피는 시기가 flower 배열에서 가장 먼저 피는 꽃보다 먼저 피면
        #더 이상 연속으로 꽃을 피울 수가 없으몰 탐색을 끝내야하는 것이다.
        break

    for i in range(0, len(flower)):
        if(target >= flower[0][0]):
            # 현재 지정된 꽃의 지는 시기가 flower배열에서 가장 빠른 꽃의 피는 시기와 비교한다.

            if(end <= flower[0][1]):
                #또 현재 꽃이 피는 시기에서 가장 나중에 지는 시점을 찾기 위해 end라는 변수를 통해서
                #가장 나중에 지는 시기를 비교해서 그 값을 찾는다.
                #즉, 꽃이 피는 시기가 target보다 작은 조건을 만족하는 시기들을 대상으로
                #가장 나중에 지는 꽃을 찾아 end에 그 값을 저장하도록 한다.

                end = flower[0][1]
                #그리고 그 값을 end에 저장하여 가장 나중에 지는 값을 받도록 한다.
                #그리고 더 이상 더 늦게 지는 시기를 찾지 못하면 그 값을 target에 넣는다.
                #이 이중 if문은 피는 시기가 target보다 일찍이며 그 중에서 가장 나중에 지는 꽃을 찾는 것이다.
                #만약 피는 시기가 target 이후면 더 이상 탐색을 하지 못하고 for문이 종료된다.

            flower.remove(flower[0])
            #하나를 찾으면 그 값은 배열에서 제외된다.
            #그렇기 때문에 뒤로 계속 탐색해 가기 보다는 항상 제일 앞에 있는 것과만 비교한다.
            #왜냐면 0번째에 있는 것이 가장 빨리 피는 꽃이기 때문이다.

        else:
            #꽃의 지는 날이 제일 빨리 피는 꽃보다 작으므로 탐색을 멈춘다.
            break

    target = end #target을 가장 나중에 지는 시기로 값을 바꾼다.
    #그래야 이후 피는 시기와 비교할 수 있다.
    total = total+1 #꽃을 하나 찾았으므로 +1을 한다.


if(target < 1201):
    print(0)
else:
    print(total)