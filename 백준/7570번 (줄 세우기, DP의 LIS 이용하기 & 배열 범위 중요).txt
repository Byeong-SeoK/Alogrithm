import sys
input = sys.stdin.readline

N = int(input())
number = list(map(int, input().split()))

index = [-1]*(N+1)
#[1, 3, 4, 5, 2, 6] 이라는 배열이 있을 때 3 4 5 부분은 이미 +1 오름차순으로 정렬되어있으므로
#3, 4, 5 부분은 건드릴 필요 없이 한 뭉탱이로 묶을 수 있다.
#뿐만 아니라 6도 앞에 2만 빼면 자동으로 3, 4, 5, 6이라는 +1 오름차순이 되므로 건드릴 필요가 없다.
#이때 각 값이 number배열에서 위치하고 있는 index값을 index배열에 저장한다.
#즉, 위의 예시에서는 index[1] = 1, index[3] = 2 이렇게 된다.
#추후 어떤 값을 옮길지는 이전 값이 이후 값보다 더 큰데 number에서의 index값이 작은 것을 선택한다.
#이러한 로직이 가능한 이유는 선택한 숫자가 무조건 배열의 앞이나 뒤에만 붙을 수 있기 때문이다.

for i in range(0, N):
    index[number[i]] = i

count = 1 #오름차순임을 받는 변수, 숫자 한 개는 포함이므로 기본 길이는 1이다.
fixed = 0 #이미 오름차순으로 정렬되어있는 것의 최장 길이
for j in range(1, N): 
    #어린이는 반드시 1~N번까지 다 있으므로 for문의 범위를 1부터 N으로 한다.
    #이때 범위를 number로 두고 number[j]를 index로 하면 무조건 index배열의 값이
    #0,1,2,.... 순으로 나오기 때문에 항상 LIS가 배열의 길이와 같게 되어버린다.
    if(index[j] < index[j+1]):
        count = count+1
    else:
        fixed = max(fixed, count) #잘 가다가 오름차순이 아닌 경우를 만나면 이때까지의 길이가 LIS이다.
        count = 1

if(N == 1):
    print(0)
else:
    print(N-fixed)