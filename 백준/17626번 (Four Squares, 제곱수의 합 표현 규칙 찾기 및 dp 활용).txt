import math

n = int(input())
dp = [0,1] #제곱수의 합으로 표현하는 최소 개수의 값을 받는 배열

"""
0 1 2     3      4    5      6       7           8  ......
0 1 2     2      1    2      3       4           2
    (1+1) (2+1) (2)   (2+1) (2+1+1) (2+1+1+1)   (2+2)     -->제곱은 생략

만약에 8을 입력받았을 때
8의 가장 가까운 제곱수인 4에 접근하여 4의 값에 +1을 한 것이 최소가 된다.
이때 저 최소값을 구하는 과정은
배열의 index가 2일 때 min값과 dp[0]+1을 비교해서 더 작은 값이 dp배열에 들어가게 하고
그 다음에는 index가 3일 때 min값과 dp[2]+1을 비교해서 더 작은 값이 dp배열에 들어가게 하는
이런 과정을 계속해서 반복하여서 최종 최소값을 구한다.
"""

for i in range(2, n+1):
    mincount = 4 #제곱수로 표현하는 가장 maximize 값은 4이다.
    for j in range(int(math.sqrt(i)), 0, -1): #입력받은 수보다 작은 수 중에서 가장 큰 제곱수 부터 1씩 줄여나간다.
        mincount = min(mincount, dp[i-j**2]+1) #mincount와 입력받은 수보다 작은 수 중에서 가장 큰 제곱수의 제곱수의 합+1 중에서 더 작은 것을 고른다.
    dp.append(mincount)

print(dp[n])