import sys
input = sys.stdin.readline

N = int(input())
price = [0]+list(map(int, input().split()))
#카드는 1, P1관계이므로 배열의 index와 이 Pi를 맞추기 위해 제일 앞에 0을 추가한다.

dp = [0]*(N+1) #각 카드팩을 구매할 때 드는 비용 최대 값을 갖는 dp배열이다.
for i in range(1, N+1):
    for k in range(1, i+1):
        dp[i] = max(dp[i], dp[i-k]+price[k])

#dp배열의 각 index의 value는 index개의 카드를 살 때 드는 비용의 최대값
#예를 들어 카드 4개를 사야할 때 가능한 경우는 총 4가지로
#1장 카드팩x4, 2장 카드팩x2, 3장 카드팩+1장 카드팩, 4장 카드팩x1 이다.
#이때 각각의 비용은 4, 10, 7, 7이고 이 비용들을 두번째 for문 max에서
#비교하여 최대의 값인 10을 dp[4]에 저장하게 된다.

print(dp[N])