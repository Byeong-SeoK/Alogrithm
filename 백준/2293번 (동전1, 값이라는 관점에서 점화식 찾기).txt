import sys
input = sys.stdin.readline

N, K = map(int, input().split())
coin = [] #동전의 종류를 받는 배열
for _ in  range(0, N):
    coin.append(int(input()))

coin.sort() #동전을 오름차순으로 정렬한다.

dp = [0]*(K+1)
#위 dp배열은 각 금액에 해당할 때 가지고 있는 코인으로 만들 수 있는 총 경우의 수를 담고 있다.
#즉, 7번째 index는 7이라는 금액을 현재 내가 가지고 있는 동전으로
#만들수 있는 전체 경우의 수를 값으로 포함하고 있다는 것이다.
dp[0] = 1
#동전 하나를 사용하는 경우 (coin이 3일 때, dp[3 - 3] = 1로 맞춰줌으로써 0원에서 3원을 더해 3원을 만드는 경우라고 생각)

for i in coin:
    for j in range(i, K+1):
        #i원으로 j원을 만든다고 할 때 coin[j] = coin[j-i] + i와 같다.
        # 그래서 그 경우의 수는 j-coin[i]원을 만드는 경우의 수와 같다.
        #왜냐하면 j-i + i이기 때문에 j-i의 각각의 경우의 수에
        #coin[i]를 붙인 것이 되기 때문이다.
        #예를 들어 1,2의 coin을 가지고 있고 4를 만드려고 할 때
        #4-> 1 1 1 1 / 1 1 2 / 2 2 라는 경우의 수가 있다.
        #이때 4 = 3+1/2+2로 볼 수 있고 즉, dp[3] = 1 + 1 + 1 / 1 + 2
        #dp[2] = 1 + 1 / 2 이런 상황에서 각각 1, 2를 붙이면
        #4를 만드는 총 경우의 수가 되는 것을 알 수 있다.

        possible = dp[j-i]
        dp[j] = dp[j] + possible

print(dp[K])